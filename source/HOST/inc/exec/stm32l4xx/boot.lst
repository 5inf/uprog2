ARM GAS  boot.asm 			page 1


   1              			.include "include/regdefs.asm"
   1              		//I/O register definitions for FLASH
   2              	
   3              		.equ	FLASH_BASE	, 0x40022000
   4              		.equ	FLASH_ACR	, 0x00
   5              		.equ	FLASH_PDKEYR	, 0x04
   6              		.equ	FLASH_KEYR	, 0x08
   7              		.equ	FLASH_OPTKEYR	, 0x0C
   8              		.equ	FLASH_SR	, 0x10
   9              		.equ	FLASH_CR	, 0x14
  10              		.equ	FLASH_ECCR	, 0x18
  11              		.equ	FLASH_OPTR	, 0x20
  12              		.equ	FLASH_PCROP1SR	, 0x24
  13              		.equ	FLASH_PCROP1ER	, 0x28
  14              		.equ	FLASH_WRP1AR	, 0x2C
  15              		.equ	FLASH_WRP1BR	, 0x30
  16              		.equ	FLASH_PCROP2SR	, 0x44
  17              		.equ	FLASH_PCROP2ER	, 0x48
  18              		.equ	FLASH_WRP2AR	, 0x4C
  19              		.equ	FLASH_WRP2BR	, 0x50
  20              		
  21              		
  22              		//I/O register definitions for RCC
  23              		.equ	RCC_BASE	, 0x40021000
  24              		.equ	RCC_AHB2ENR	, 0x4C
  25              		
  26              		
  27              		//I/O register definitions for PORT C
  28              		.equ	PORTC_BASE	, 0x48000800
  29              		.equ	PORTC_MODER	, 0x00
  30              		.equ	PORTC_IDR	, 0x10
  31              		.equ	PORTC_ODR	, 0x14
  32              		
  33              		
  34              		
   2              	
   3              			.text
   4              			.thumb
   5              	
   6              			.org 0x00000
   7              		
   8              	reset_vector:
   9              	
  10 0000 C0030020 			.word 0x200003C0	// start SP
  11 0004 09000020 			.word 0x20000009	// start PC
  12              	
  13              	main_start:
  14              	################################################################################
  15              	# set rcc
  16              	################################################################################
  17              	#			ldr	r4, =RCC_BASE
  18              	#			mov	r3,#0x04		//PORTC enable
  19              	#			str	r3,[r4,#RCC_AHB2ENR]
  20              	
  21              	#			ldr	r5, =PORTC_BASE
  22              	#			ldr	r3, =0x01100000		//PORTC enable
  23              	#			str	r3,[r5,#PORTC_MODER]
ARM GAS  boot.asm 			page 2


  24              	#			ldr	r3, =0x1000		//PORTC set
  25              	#			str	r3,[r5,#PORTC_ODR]
  26              						
  27              	################################################################################
  28              	# set wait states
  29              	################################################################################
  30              	#			ldr	r4, =FLASH_BASE
  31              	#			mov	r3,#0x01		//1 wait state
  32              	#			str	r3,[r4,#FLASH_ACR]
  33              	
  34              	################################################################################
  35              	# the main loop
  36              	################################################################################
  37 0008 2349     	main_loop:		ldr	r1, =0x20000c00		//cmd word
  38 000a 0022     				mov	r2,#0		
  39 000c 0A60     				str	r2,[r1,#0]		//set to zero
  40              	#			ldr	r3, =0x0100		//PORTC set
  41              	#			str	r3,[r5,#PORTC_ODR]
  42              	
  43              	
  44 000e 0868     	main_loop_wait:		ldr	r0, [r1,#0]
  45 0010 9042     				cmp	r0, r2
  46 0012 FCD0     				beq	main_loop_wait
  47              				
  48 0014 214C     				ldr	r4, =FLASH_BASE
  49              	#			ldr	r3, =0x0200		//PORTC set
  50              	#			str	r3,[r5,#PORTC_ODR]
  51              				
  52 0016 071C     				mov	r7,r0			//address
  53 0018 214A     				ldr	r2,=0xFFFFFF00
  54 001a 1740     				and	r7,r2
  55 001c FF22     				mov	r2,#0xff
  56 001e 1040     				and	r0,r2			
  57              	
  58 0020 5228     				cmp	r0, #0x52		// prog main flash
  59 0022 03D0     				beq	prog_flash
  60              	
  61 0024 7228     				cmp	r0, #0x72		// prog option bytes
  62              	//			beq	x_prog_opt
  63              	
  64 0026 EFE7     	tloop:			b	main_loop
  65              	
  66 0028 15E0     	x_prog_opt:		b	prog_opt			
  67 002a EDE7     				b	main_loop
  68              	
  69              	
  70              	################################################################################
  71              	# program 2K flash
  72              	################################################################################
  73 002c 00F027F8 	prog_flash:		bl	main_unlock		//unlock
  74              	
  75 0030 1C49     				ldr	r1, =0x20000400		//buffer base
  76 0032 1D4E     				ldr	r6, =0x100		//lwords to do			
  77              	
  78 0034 0122     				mov	r2,#0x01		//set PG
  79 0036 6261     				str	r2, [r4,#FLASH_CR]
  80              				
ARM GAS  boot.asm 			page 3


  81 0038 0868     	prog_flash_1:		ldr	r0,[r1,#0]		//get data 1
  82 003a 3860     				str	r0,[r7,#0]		//store word 1
  83              	
  84 003c 0437     				add	r7,#4			//flash addr
  85 003e 0431     				add	r1,#4			//buffer addr
  86              	
  87 0040 0868     				ldr	r0,[r1,#0]		//get data 1
  88 0042 3860     				str	r0,[r7,#0]		//store word 2
  89              	
  90 0044 194B     				ldr	r3, =0x010000		//BSY
  91 0046 2269     	prog_flash_3:		ldr	r2, [r4,#FLASH_SR]
  92 0048 1A42     				tst	r2,r3
  93 004a FCD1     				bne	prog_flash_3		//BNE
  94              	
  95 004c 0437     	prog_flash_4:		add	r7,#4			//flash addr
  96 004e 0431     				add	r1,#4			//buffer addr
  97              	
  98 0050 013E     				sub	r6,#1
  99 0052 F1D1     				bne	prog_flash_1			
 100              				
 101 0054 D8E7     				b	main_loop
 102              	
 103              	
 104              	################################################################################
 105              	# program option bytes
 106              	################################################################################
 107 0056 164A     	prog_opt:		ldr	r2, =0x08192A3B		//key 1
 108 0058 164B     				ldr	r3, =0x4C5D6E7F		//key 2
 109              	//			str	r2,[r4,#FLASH_KEYR]	//write key 1	
 110              	//			str	r3,[r4,#FLASH_KEYR]	//write key 2	
 111 005a E260     				str	r2,[r4,#FLASH_OPTKEYR]	//write key 1	
 112 005c E360     				str	r3,[r4,#FLASH_OPTKEYR]	//write key 2	
 113              		
 114 005e 1149     				ldr	r1, =0x20000400		//buffer base
 115              	
 116 0060 0E4C     				ldr	r4, =FLASH_BASE
 117 0062 0023     				mov	r3,#0
 118 0064 6361     				str	r3,[r4,#FLASH_CR]
 119              	
 120 0066 0868     	prog_opt_1:		ldr	r0,[r1,#0]		//get data
 121 0068 134A     				ldr	r2, = 0x80FFFFEC
 122 006a 1040     				and	r0,r2
 123 006c 6061     				str	r0,[r4,#FLASH_CR]
 124 006e 0222     				mov	r2,#0x02
 125 0070 1043     				orr	r0,r2
 126 0072 6061     				str	r0,[r4,#FLASH_CR]
 127              				
 128 0074 0D4B     				ldr	r3, =0x010000		//BSY
 129 0076 2269     	prog_opt_3:		ldr	r2, [r4,#FLASH_SR]
 130 0078 1A42     				tst	r2,r3
 131 007a FCD1     				bne	prog_opt_3
 132              				
 133 007c C4E7     				b	main_loop
 134              	
 135              	
 136              	################################################################################
 137              	# unlock main flash
ARM GAS  boot.asm 			page 4


 138              	################################################################################
 139 007e 074C     	main_unlock:		ldr	r4, =FLASH_BASE
 140 0080 6269     				ldr	r2,[r4,#FLASH_CR]
 141 0082 0E4B     				ldr	r3,=0x80000000
 142 0084 1A40     				and	r2,r3
 143 0086 9342     				cmp	r3,r2
 144 0088 03D1     				bne	main_unlock_1		//is already unlocked
 145              				
 146 008a 0D4A     				ldr	r2, =0x45670123		//key 1
 147 008c 0D4B     				ldr	r3, =0xCDEF89AB		//key 2
 148 008e A260     				str	r2,[r4,#FLASH_KEYR]	//write key 1	
 149 0090 A360     				str	r3,[r4,#FLASH_KEYR]	//write key 2	
 150 0092 0023     	main_unlock_1:		mov	r3,#0
 151 0094 6361     				str	r3,[r4,#FLASH_CR]
 152              	
 153 0096 7047     				bx	lr
 154              						
 155              				.align 2
 156              			
 157 0098 000C0020 	
 157      00200240 
 157      00FFFFFF 
 157      00040020 
 157      00010000 
